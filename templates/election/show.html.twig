{% extends 'base.html.twig' %}

{% block title %}Election{% endblock %}

{% set used_count = 0 %}
{% for code in election.codes %}
    {% if code.used %}
        {% set used_count = used_count +1 %}
    {% endif %}
{% endfor %}

{% block body %}
<div class="container pb-5">
    <div class="card mb-3  rounded-3 mb-5">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-start">
                <div>
                    <div class="fw-bold text-primary">Wahlrunde im Detail</div>
                    <div class="h4">{{ election }}</div>
                </div>
                <div class="d-flex">
                    <a class="btn btn-secondary" href="{{ path('crud_election_index') }}"><i class="bi bi-chevron-left me-2"></i>Zurück</a>
                </div>
            </div>
        </div>
        <div class="card-body bg-light-subtle">

            <p>Es sind noch {{ election.codes.count - used_count}} von {{ election.codes.count }} Wahlcodes übrig.</p>
            <a href="{{ path('crud_election_export_codes',{'id':election.id}) }}" class="btn btn-sm btn-secondary">Wahlcodes laden</a>
            <hr>
        </div>
        <div class="table-responsive bg-light-subtle">
            <table class="table table-hover mb-0" id="table">
                <thead class="border-primary border-3 border-top-0 border-start-0 border-end-0">
                <tr>
                    <th class="text-nowrap">Name</th>
                    <th class="text-nowrap">Stimmenanteile</th>
                    <th class="text-end text-nowrap">Aktionen</th>
                </tr>
                </thead>
                <tbody>
                {% for person in election.people|sort((a, b) => a.name <=> b.name) %}
                    <tr>
                        <td class="text-nowrap"><i class="bi bi-square-fill me-2" style="color: {{ colors[loop.index0] }}"></i>{{ person.name }}</td>
                        {% if election.electionResults.count == 0 %}
                            {% set electionresult = 0 %}
                            {% else %}
                                {% set electionresult = (person.electionresults.count / election.electionResults.count * 100)|round(2) %}
                        {% endif %}
                        <td class="text-nowrap">{{ electionresult }}%</td>
                        <td class="text-end text-nowrap">
                            <a href="{{ path('admin_person_edit', {'id': person.id}) }}">bearbeiten</a>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
        <div class="card-footer">
            <div class="d-flex justify-content-end align-items-center">
                <a class="btn btn-primary" href="{{ path('crud_election_edit', {'id': election.id}) }}">bearbeiten</a>
            </div>
        </div>
    </div>

    <div class="row row-cols-1 g-3 row-cols-md-3 mb-5">
        <div class="col">
            <div class="card bg-primary text-light">
                <div class="card-body">
                    <div class="lead">Wahlstimmen</div>
                    <div class="display-2">{{ election.voices }}</div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card bg-secondary text-light">
                <div class="card-body">
                    <div class="lead">Nominiert</div>
                    <div class="display-2">{{ election.people.count }}</div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card bg-info text-light">
                <div class="card-body">
                    <div class="lead">Wahlbeteiligung</div>
                    <div class="display-2">{{ (used_count / election.codes.count * 100)|round }}%</div>
                </div>
            </div>
        </div>
    </div>

    <div class="row row-cols-1 mb-5">
        <div class="col">
            <div class="card">
                <div class="card-header">
                    <div class="">
                        <div class="fw-bold text-primary">Grafische Auswertung</div>
                        <div class="d-flex">
                        </div>
                        <div class="h5">Wahlrunde der {{ election }}</div>
                    </div>
                </div>
                <div class="card-body bg-light-subtle">
                    <canvas id="result-chart"></canvas>
                </div>
            </div>
        </div>
    </div>

</div>

    <script>
        {% set generic = 0 %}
        {% set genericCount = 0 %}
        const ctx{{ election.id }} = document.getElementById('result-chart');

        const labels{{ election.id }} = '';
        const data{{ election.id }} = {
            labels: labels{{ election.id }},
            datasets: [{
                label: 'Stimmen',
                data: {
                    {% for person in election.people|sort((a, b) => a.name <=> b.name)  %}
                    {% if person.electionResults.count < 10  and election.id == 30 %}
                    {% if person.electionResults.count > 0  %}
                    {% set generic = generic + 1 %}
                    {% set genericCount = genericCount + person.electionResults.count %}
                    {% endif %}
                    {% else %}
                    '{{  person.name }}':{{  person.electionResults.count }},
                    {% endif %}
                    {% endfor %}
                    {% if generic > 0  %}
                    'Sonstige': {{ genericCount }}
                    {% endif %}
                },
                backgroundColor: [
                    '#fff100',
                    '#ff8c00',
                    '#e81123',
                    '#ec008c',
                    '#68217a',
                    '#00188f',
                    '#00bcf2',
                    '#00b294',
                    '#009e49',
                    '#bad80a',
                    '#fff100',
                    '#ff8c00',
                    '#e81123',
                    '#ec008c',
                    '#68217a',
                    '#00188f',
                    '#00bcf2',
                    '#00b294',
                    '#009e49',
                    '#bad80a',
                ],
                borderWidth: 0,
            }]
        };

        new Chart(ctx{{ election.id }}, {
            type: 'bar',
            data: data{{ election.id }},
            options: {
                responsive: true,
                legend: {
                    position: 'bottom',
                },
                hover: {
                    mode: 'label'
                },
                scales: {
                    y: {
                        suggestedMin: 0,
                        ticks: {
                            // Include a dollar sign in the ticks
                            callback: function (value, index, ticks) {
                                return value;
                            },
                            stepSize: 1
                        },
                        grid: {
                            display: true
                        }
                    }
                },
                plugins: {
                    title: {
                        display: true,
                        text: 'Wahlergebnis'
                    },
                    legend: {
                        display: false
                    },
                }
            }
        });
    </script>





{% endblock %}
